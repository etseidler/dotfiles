name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
    batch: true
    branches:
        include:
            - main
    paths:
        include:
            - open-ssh-remote

pr: none

resources:
    repositories:
        - repository: templates
          type: github
          name: microsoft/vscode-engineering
          ref: main
          endpoint: Monaco

parameters:
  - name: publishExtension
    displayName: ðŸš€ Publish Extension
    type: boolean
    default: false

extends:
    template: azure-pipelines/extension/stable.yml@templates
    parameters:
        l10nSourcePaths: ./src
        buildSteps:
            - task: AzureCLI@2
              displayName: 'Azure CLI: Set token for packaging registry'
              inputs:
                azureSubscription: 'vscode-devdiv-packaging'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  set -e
                  TOKEN=$(az account get-access-token --query accessToken --resource 499b84ac-1321-427f-aa17-267ca6975798 -o tsv)
                  TOKEN_BASE64=$(echo -n "$TOKEN" | base64 | tr -d '\n')

                  npm set "//devdiv.pkgs.visualstudio.com/DevDiv/_packaging/vscode-internal/npm/:username=devdiv"
                  npm set "//devdiv.pkgs.visualstudio.com/DevDiv/_packaging/vscode-internal/npm/:email=unset"
                  npm set "//devdiv.pkgs.visualstudio.com/DevDiv/_packaging/vscode-internal/npm/:_password=$TOKEN_BASE64"

            - script: |
                yarn install --frozen-lockfile
              displayName: Install dependencies
              workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote

            - script: yarn lint
              displayName: Lint
              workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote

            - script: |
                set -e
                yarn compile

                if [ -f out/**/*.sh ]; then
                chmod +x out/**/*.sh
                fi
              displayName: Build
              workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote

            - bash: |
                # For integration tests on Linux
                /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
                echo ">>> Started xvfb"
              displayName: Start xvfb

            - script: |
                set -ex

                yarn test
                sleep 2
                rm -rf .vscode-test # Prevent component governance from searching inside
              displayName: Test
              env:
                DISPLAY: ':99.0'
              workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote

        ghCreateTag: true
        ghTagPrefix: remote-ssh.

        publishExtension: ${{ parameters.publishExtension }}

        tsa:
            config:
                areaPath: 'Visual Studio Code Remote Extensions'
                serviceTreeID: '5d36a4a8-78dc-40d8-8942-b64fc69a8756'
            enabled: true

        cgSourceScanPath: $(Build.SourcesDirectory)/open-ssh-remote
        workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote

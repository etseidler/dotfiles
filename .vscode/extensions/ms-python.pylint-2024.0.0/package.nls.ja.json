{"command.restartServer":"サーバーの再起動","extension.description":"Pylint の使用による Python ファイルのリンティングのサポート。","settings.args.description":"Python ファイルをリントするために Pylint に渡される引数。各引数は、配列内の個別の文字列として指定する必要があります。\n例:\n- `\"pylint.args\": [\"--rcfile=<file>\"]`\n- `\"pylint.args\": [\"--disable=C0111\", \"--max-line-length=120\"]`","settings.cwd.description":"Pylint で Python ファイルをリントするために使用される現在の作業ディレクトリを設定します。既定では、ワークスペース `${workspaceFolder}` のルート ディレクトリが使用されます。Pylint の作業ディレクトリとしてリントされているファイルの親フォルダーを使用するには、`${fileDirname}` に設定できます。","settings.enabled.description":"入力時に Pylint を使用して Python ファイルのリントを有効/無効にします。","settings.ignorePatterns.description":"fnmatch Python ライブラリでサポートされている [glob パターン](https://docs.python.org/3/library/fnmatch.html) を構成して、Pylint でリントされるファイルまたはフォルダーを除外します。","settings.importStrategy.description":"Python ファイルをリントするためにどの Pylint バイナリを使用するかを定義します。`useBundled` に設定すると、拡張機能は拡張機能に付属している Pylint バイナリを使用します。'fromEnvironment' に設定すると、拡張機能は Pylint バイナリと、現在選択されている環境で利用可能なすべての依存関係の使用を試みます。注: 拡張機能が選択した環境で有効な Pylint バイナリを見つけられない場合は、拡張機能に付属している Pylint バイナリの使用にフォールバックします。この設定が `fromEnvironment` に設定されている場合は、`pylint.path` 設定も無視されることがあります。","settings.importStrategy.fromEnvironment.description":"選択した環境から Pylint を使用します。拡張機能で有効な Pylint バイナリが見つからない場合、バンドルされたバージョンの Pylint の使用にフォールバックします。","settings.importStrategy.useBundled.description":"拡張機能に付属しているバンドルされたバージョンの Pylint を常に使用します。","settings.interpreter.description":"Python 実行可能ファイルまたは Pylint サーバーとサブプロセスの起動に使用されるコマンドへのパス。単一または複数の文字列の配列を受け入れます。`[]` に設定すると、拡張機能は選択した Python インタープリターへのパスを使用します。コマンドを渡す場合は、各引数を配列内の個別の文字列として指定する必要があります。","settings.lintOnChange.description":"入力時に Pylint を使用して Python ファイルのリントを有効にします。","settings.path.description":"Pylint で Python ファイルをリントするための拡張機能で使用されるパスまたはコマンド。単一または複数の文字列の配列を受け入れます。コマンドを渡す場合は、各引数を配列内の個別の文字列として指定する必要があります。`[\"pylint\"]` に設定すると、`PATH` 環境変数で使用可能な Pylint のバージョンが使用されます。注: このオプションを使用すると、リントが遅くなる可能性があります。\n例:\n- `[\"~/global_env/pylint\"]`\n- `[\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"pylint\"]`\n`[\"pylint\"]`","settings.severity.description":"[問題] ウィンドウに表示される、Pylint のメッセージ型と VS Code の診断重大度レベルのマッピング。これを使用して、特定の Pylint エラー コードをオーバーライドすることもできます。\n例:</br> '{\"convention\": \"Information\", \"error\": \"Error\", \"fatal\": \"Error\", \"refactor\": \"Hint\", \"warning\": \"Warning\", \"W0611\": \"Error\", \"undefined-variable\": \"Warning\"}'","settings.showNotifications.always.description":"すべての通知を表示します。","settings.showNotifications.description":"この拡張機能によって通知が表示されるタイミングを制御します。指定できる値は、'onError'、'onWarning'、'always'、'off' です。","settings.showNotifications.off.description":"通知を表示しません。エラーまたは警告は、ログで引き続き使用できます。","settings.showNotifications.onError.description":"エラーに対する通知を表示します。","settings.showNotifications.onWarning.description":"エラーと警告の通知を表示します。"}
